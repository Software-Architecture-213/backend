events {}
http {
    server {
        listen 0.0.0.0:80;
        server_name localhost;

        # Enable CORS headers

        add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE';
        add_header Access-Control-Allow-Headers 'Content-Type, Authorization';

        # Route /api/identity specifically to the Node.js /api endpoint
        location /api/identity {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            # Use host.docker.internal to connect to host machine - IdentityService
            proxy_pass http://host.docker.internal:8080/identity;
            proxy_redirect off;
        }

        location /api/games {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            # Use host.docker.internal to connect to host machine - IdentityService
            proxy_pass http://host.docker.internal:8081/games;
            proxy_redirect off;
        }

        location /api/brands {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;
            # Use host.docker.internal to connect to host machine
            proxy_pass http://host.docker.internal:8082/brands;
            proxy_redirect off;
        }
    }
}

